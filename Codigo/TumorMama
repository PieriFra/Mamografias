% TP PDI SIN FUNCION
function tumor = TumorMama(filename)

% filename='1507275789.jpeg';% FUNCIONA
% filename='2018_BC0021642_ MLO_L.jpg';% FUNCIONA CON ESTE CODIGO TAMB no
% funciona con un SE de 5 
% filename='1506392319.jpeg';% FUNCIONA CON ESTE CODIGO TAMB
% filename='1507275789.jpeg';%FUNCIONA
% filename='1360800566.jpeg';% FUNCIONA
% filename='146978545.jpeg';%NO FUNCIONA 
% filename='Maligno3.jpg';% NO FUNCIONA PERO SI BORRAS MAS EL BORDE CREO Q VA A FUNCIONAR
% filename='Maligno2.jpg';% FUNCIONA
% filename='Maligno1.jpeg';% NO FUNCIONA - FUNCIONA CON SE 5

% filename='1524699538.jpeg';% NO FUNCIONA PERO SI BORRAS MAS EL BORDE CREO Q VA A FUNCIONAR
% filename='1223615557.jpeg';% NO FUNCIONA
% filename='1203336509.jpeg';% NO FUNCIONA
% filename='155909056.jpeg';% NO FUNCIONA - FUNCIONA CON SE 5

%Estos son benignos
% filename='2013_BC009941_ MLO_R.jpg';% FUNCIONA CON SE 5
% filename='2016_BC005661_ MLO_R.jpg';% NO FUNCIONA CON SE 5

img=imread(filename);


gray = ismatrix(img);
gris=img;
if gray == false %no esta en escala de grises
    gris = rgb2gray(img);
end


% figure(1)
% subplot(121)
% imshow(img);
% 
J=histeq(gris);
% subplot(122)
% imshow(J)
%imcontrast;

umbral1=150;
umbral2=255;
img_out=imadjust(gris,[umbral1, umbral2]/255, [0, 255]/255);

% figure(2)
% imshow(img_out);

BW=imbinarize(img_out);

% figure(3)
% subplot(121)
% imshow(BW)

%--------------------------
%ELIMINO BORDES 

[B,L]=bwboundaries(BW);

borde=size(L,2); %Nos quedamos con la altura de la matriz de etiquetas

%cambiar 512 por tamano imagen!!


num=0;
max_inicio=max(L(:,11));
max_final=max(L(:,borde));

for i=1:max_inicio
    fila_inicio=find(L(:,1)==i);

    if ~isempty(fila_inicio)
        distinta_cero1 = fila_inicio(1);
        num1=L(distinta_cero1,1);
        L(L==num1)=0;
    end
end

%pongo solo un num porque solo aparecen elementos en uno de los dos bordes

for i=1:max_final
     fila_final=find(L(:,borde)==i);

    if ~isempty(fila_final)
        distinta_cero2 = fila_final(1);
        num2=L(distinta_cero2,borde);
        L(L==num2)=0;
    end
end


% Visualizar la imagen resultante
% subplot(122)
% imshow(L);
% ylabel('bordes sin elementos')

BWL=imbinarize(L);

% figure(4)
% imshow(BWL);
% ylabel('binarizo sin bordes')

%---------------------
SE1=strel('square',2);
SE2=strel('disk',3);
SE3=strel('disk',5);
% 
% BW2=imerode(BW,SE1);
% BW2=imerode(BW2,SE1);
% BW2=imerode(BW2,SE2);
BW2=imdilate(BWL,SE3);

% figure(5)
% subplot(131)
% imshow(BW2)
% ylabel('mascara dilatada')

mask=BW2;
% hold on;
%-> puede ser que haya otros elementos que me agarra
%los elimino (son de menor area que el del tumor)

[Lq, B1] = bwboundaries(mask);
L1 = bwlabel(mask);
% Medir el área de cada objeto
prop = regionprops(L1, 'Area', 'Perimeter', 'Centroid');
% Encontrar el índice del objeto más pequeño
areas = [prop.Area];
perimeters = [prop.Perimeter];

for k = 1:length(prop)
    r = perimeters(k)/(2*pi) + 0.5;
    FR(k) = (4*pi*areas(k))/(perimeters(k)^2)*(1 - 0.5/r)^2;
end

% for k = 1:length(FR)
%     circ_string = sprintf('%2.2f',FR(k));
%     circulo = B{k};
%     centroid = prop(k).Centroid;
%     text(centroid(1), centroid(2), circ_string, ...
%         'Color', 'red', 'FontSize', 10, 'HorizontalAlignment', 'center');
% end

for i=1:length(prop)
    if FR(i) < 0.55
       mask(L1 == i) = 0;
    end
end

L2 = bwlabel(mask);
prop2 = regionprops(mask, 'Area');
areas2 = [prop2.Area];
[valor_max, indice_circulo_mas_grande] = max(areas2);
% subplot(132)
% imshow(mask);
% ylabel('mascara semi')
% Eliminar los objetos pequeños si hay mas de un objeto en la imagen
if length(areas2)>1
   for i=1:length(areas2)
       mask(L2 ~= indice_circulo_mas_grande) = 0;
   end
end


% Podemos hacer un while, quedarse con el indice del maximo y ir borrando
% los mas chicos a este

% subplot(133)
% imshow(mask);
% ylabel('mascara final')

%------------
tumor=BW.*mask;

% figure(6)
[B3,L3] = bwboundaries(tumor);

prop3 = regionprops(L3, 'Area');
areas3 = [prop3.Area];
[valor_max, indice_circulo_mas_grande3] = max(areas3);

% Eliminar los objetos pequeños si hay mas de un objeto en la imagen
if length(areas3)>1
   for i=1:length(areas3)
       tumor(L3 ~= indice_circulo_mas_grande3) = 0;
   end
end


[B4,L4] = bwboundaries(tumor);
% 
% imshow(tumor)
% ylabel('tumor'); hold on;
% colors='r';


% if(size(B4)>=1)
%   boundary = B4{1};
%   plot(boundary(:,2), boundary(:,1),...
%        'r','LineWidth',2);
% end

% figure(7)
% subplot(121)
% imshow(img);
% subplot(122)
% imshow(tumor);
